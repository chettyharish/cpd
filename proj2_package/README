This directory contains a partial implmentation of mymake, partial_mymake, that
runs on linprog. Partial_mymake only has a simple execution engine that runs
simple commands (with full path) and the built-in echo command. It does however
support flags '-f mf', '-p', '-d', '-k', '-i', and '-t num' flags and the command
line parsing. You should use it as a reference for your implementation. For the
behavior with more advanced execution, your program should resemble the UNIX make
behavior. 

Following is some basic testing:

<linprog> ./partial_mymake
...
<linprog> ./partial_mymake -f asdfj
...

<linprog> make test0
...
<linprog> ./partial_mymake -f makefile test0
...
<linprog> ./partial_mymake -f makefile test0 -p
...
<linprog> ./partial_mymake -f makefile test0 -p
...
<linprog> make test1
...
<linprog> ./partial_mymake -f makefile test1
...
<linprog> make
...
<linprog> make test1
...
<linprog> ./partial_mymake -f makefile test1
...
<linprog> ./partial_mymake -f makefile test1 -k
...
<linprog> ./partial_mymake -f makefile test2
...
<linprog> make test3
...
<linprog> ./partial_mymake -f makefile test3
...
<linprog> make test
'ctrl-C'
...
<linprog> ./partial_mymake -f makefile test
'ctrl-C'
...
<linprog> ps -u usrname | grep sleep
/* sleep should not be there */
<linprog> ./partial_mymake -f makefile test -t 10
...
<linprog> ./partial_mymake -f makefile clean
...
<linprog> ./partial_mymake -f makefile test -d
...
<linprog> ./partial_mymake -f makefile test -i
'ctrl-C'
'ctrl-C'
'ctrl-C'
...
<linprog> ./partial_mymake -f makefile clean
...
<linprog> ./partial_mymake -f makefile4
...
<linprog> ./partial_mymake -f makefile test4 -d
...
<linprog> ./partial_mymake -f makefile test7 -d
...


